import gmpy2

n = 16551607791513310143367718420160496017716438900159843171951158812834625404025819000006450794387195406345952438600612732574009790172009017187068132583686325525604998698900736192681010644918133643334867213766651610742025315226553357161124371160165728228238808856850234798660237966304139110197982306465482087141
e1 = 65537
e2 = 65539
c1 = 1129577506068504469345887363147787486017374614115334845659793955402788290276839150314266230618914458454490822134129029320196215857189604704858201914703171395094716563126451957806227382204438629408146257354346918995020514101912710194471044390206478595928893069122774855951576832331537914647316369902972676419
c2 = 2312267001662149847216610383002454962845172172590149633659040319002856658500558236678068991511310275065117853509318224378486528518801367253730813242027077527555556802869225370500266724893566221191787616000347525781413708804332132838890466815970966346122371108786541601825960204632255691107425283995717582890
 
val = gmpy2.gcdext(e1,e2)
 
print("[+] gcd(e1,e2) : {}".format(val[0]))
print("[+] a:{}, b:{}".format(val[1],val[2]))
print("[+] e1*a + e2*b == gcd(e1,e2)? : {}".format((e1*val[1]+e2*val[2]) == val[0]))
 
if val[1] < 0:
    a = -val[1]
    b = val[2]
    c1_inv = gmpy2.invert(c1,n)
    c1a = pow(c1_inv, a, n)
    c2b = pow(c2, b, n)
else:
    a = val[1]
    b = -val[2]
    c2_inv = gmpy2.invert(c2,n)
    c1a = pow(c1, a, n)
    c2b = pow(c2_inv, b, n)
 
m = (c1a * c2b)%n
 
m,result = gmpy2.iroot(m,val[0])
print("[+] gmpy2.iroot(m,gcd(e1,e2)) : {}".format(result))
print("[+] m^e1(mod n) == c1? : {}".format(pow(m,e1,n) == c1))
print("[+] m^e2(mod n) == c2? : {}".format(pow(m,e2,n) == c2))
 
try:
    flag = binascii.unhexlify(format(m, 'x')).decode()
except Exception as e:
    flag = m
print flag
